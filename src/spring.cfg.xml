<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-2.0.xsd 
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx-2.0.xsd">


	<!-- bean id="ds" class="org.apache.commons.dbcp.BasicDataSource" <property 
		name="driverClassName" value="com.mysql.jdbc.Driver" /> <property name="url" 
		value="jdbc:mysql://127.0.0.1:3306/dwz4j" /> <property name="username" value="root" 
		/> <property name="password" value="987425" /> </bean> <property name="jdbcUrl" 
		value="jdbc:mysql://renjie120.gotoftp2.com:3306/renjie120" /> <property name="user" 
		value="renjie120" /> <property name="password" value="lisq2014ZSQ" /> -->



	<bean id="ds" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="com.mysql.jdbc.Driver" />
		<!-- <property name="jdbcUrl" value="jdbc:mysql://127.0.0.1:3306/dwz4j" 
			/> <property name="user" value="root" /> <property name="password" value="987425" 
			/> <property name="jdbcUrl" value="jdbc:mysql://renjie120.gotoftp2.com:3306/renjie120" 
			/> <property name="user" value="renjie120" /> <property name="password" value="lisq2014ZSQ" 
			/> -->
		<property name="jdbcUrl" value="jdbc:mysql://127.0.0.1:3306/dwz4j" />
		<property name="user" value="root" />
		<property name="password" value="987425" />

		<property name="minPoolSize" value="10" />
		<!--连接池中保留的最大连接数。Default: 15 -->
		<property name="maxPoolSize" value="100" />
		<!--最大空闲时间,1800秒内未使用则连接被丢弃。若为0则永不丢弃。Default: 0 -->
		<property name="maxIdleTime" value="1800" />
		<!--当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。Default: 3 -->
		<property name="acquireIncrement" value="3" />
		<property name="maxStatements" value="1000" />
		<property name="initialPoolSize" value="10" />
		<!--每60秒检查所有连接池中的空闲连接。Default: 0 -->
		<property name="idleConnectionTestPeriod" value="60" />
		<!--定义在从数据库获取新连接失败后重复尝试的次数。Default: 30 -->
		<property name="acquireRetryAttempts" value="30" />
		<property name="breakAfterAcquireFailure" value="true" />
		<property name="testConnectionOnCheckout" value="false" />
	</bean>

	<!-- destroy-method="close" bean id="ds" class="com.alibaba.druid.pool.DruidDataSource"> 
		<property name="driverClassName" value="${driverName}" /> <property name="url" 
		value="${url}" /> <property name="username" value="${username}" /> <property 
		name="password" value="${password}" /> <property name="filters" value="stat,config" 
		/> <property name="maxActive" value="20" /> <property name="initialSize" 
		value="5" /> </bean -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<!-- to override, use the "SpringDatasourceConfig" snippet in your project -->
		<property name="dataSource">
			<ref bean="ds" />
		</property>
		<property name="mappingResources">
			<list>
				<value>
					hbm/InfNews.hbm.xml
				</value>
				<value>
					hbm/SysRole.hbm.xml
				</value>
				<value>
					hbm/SysLog.hbm.xml
				</value>
				<value>
					hbm/SysResource.hbm.xml
				</value>
				<value>
					hbm/SysPermission.hbm.xml
				</value>
				<value>
					hbm/SysSession.hbm.xml
				</value>
				<value>
					hbm/loginfo.hbm.xml
				</value>
				<value>
					hbm/SysUserRole.hbm.xml
				</value>
				<value>
					hbm/SysUser.hbm.xml
				</value>
				<value>
					hbm/ConFolder.hbm.xml
				</value>
				<value>
					hbm/ConFile.hbm.xml
				</value>
				<value>
					hbm/SetPreference.hbm.xml
				</value>
				<value>
					hbm/WebPage.hbm.xml
				</value>
				<value>
					hbm/WebWebsite.hbm.xml
				</value>
				<value>
					hbm/InvCategory.hbm.xml
				</value>
				<value>
					hbm/InvProduct.hbm.xml
				</value>
				<value>
					hbm/param.hbm.xml
				</value>
				<value>
					hbm/paramtype.hbm.xml
				</value>
				<value>
					hbm/usermenuright.hbm.xml
				</value>
				<value>
					hbm/myuser.hbm.xml
				</value>
				<value>
					hbm/filemanager.hbm.xml
				</value>
				<value>
					hbm/menu.hbm.xml
				</value>
				<value>
					hbm/org.hbm.xml
				</value>
				<value>
					hbm/userroleright.hbm.xml
				</value>
				<value>
					hbm/role.hbm.xml
				</value>
				<value>
					hbm/rolewithmenu.hbm.xml
				</value>
				<value>
					hbm/cache.hbm.xml
				</value>
				<value>
					hbm/insuredunit.hbm.xml
				</value>
				<value>
					hbm/insuredcompany.hbm.xml
				</value>
				<value>
					hbm/insuredcompanyselect.hbm.xml
				</value>
				<value>
					hbm/businessgroup.hbm.xml
				</value>
				<value>
					hbm/businessman.hbm.xml
				</value>
				<value>
					hbm/citydict.hbm.xml
				</value>
				<value>
					hbm/provincedict.hbm.xml
				</value>
				<value>
					hbm/businessshop.hbm.xml
				</value>
				<value>
					hbm/insureduser.hbm.xml
				</value>
				<value>
					hbm/loginuser.hbm.xml
				</value>
				<value>
					hbm/insuredfile.hbm.xml
				</value>
				<value>
					hbm/userupdatelogger.hbm.xml
				</value>
				<value>
					hbm/systemsequence.hbm.xml
				</value>
				<value>
					hbm/uploadfile.hbm.xml
				</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">
					org.hibernate.dialect.MySQLDialect
				</prop>

				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.jdbc.batch_size">50</prop>
				<prop key="hibernate.jdbc.fetch_size">5</prop>
				<prop key="hibernate.connection.pool_size">2</prop>
				<prop key="hibernate.connection.autocommit">false</prop>
				<prop key="hibernate.cache.use_query_cache">false</prop>
				<prop key="hibernate.max_fetch_depth">1</prop>
				<prop key="hibernate.bytecode.use_reflection_optimizer">true</prop>
			</props>
		</property>
	</bean>

	<bean id="jdbcTm"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource">
			<ref local="ds" />
		</property>
	</bean>


	<!-- jdbc modle -->
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource">
			<ref bean="ds" />
		</property>
	</bean>

	<!-- transaction manager -->
	<bean id="txManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>
	</bean>

	<!-- DaoIntroductionInterceptor -->
	<bean id="daoIntroductionInterceptor" class="dwz.dal.DaoIntroductionInterceptor">
	</bean>

	<bean id="reportUtil" class="common.report.ReportDaoUtil">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<!-- IntroductionInterception -->
	<bean id="daoAdvisor"
		class="org.springframework.aop.support.DefaultIntroductionAdvisor">
		<constructor-arg>
			<ref bean="daoIntroductionInterceptor" />
		</constructor-arg>
	</bean>

	<bean id="daoProxy" class="org.springframework.aop.framework.ProxyFactoryBean"
		abstract="true">
		<property name="interceptorNames">
			<list>
				<value>daoAdvisor</value>
			</list>
		</property>
	</bean>



	<bean id="baseDao" class="dwz.dal.BaseDaoImpl" abstract="true">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<!-- Spring资源国际化 (统一使用String2国际化) -->
	<!-- <bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource"> 
		<property name="basenames"> <list> <value>resource/messages</value> </list> 
		</property> </bean> -->

	<import resource="spring_dao.cfg.xml" />
	<import resource="spring_manager.cfg.xml" />
	<import resource="spring_dao_money.cfg.xml" />
	<!-- import resource="spring_activiti.cfg.xml" / -->
	<import resource="spring_manager_money.cfg.xml" />

	<tx:annotation-driven transaction-manager="txManager" />

	<bean id="SpringContextUtil" class="common.base.SpringContextUtil">
	</bean>
</beans>